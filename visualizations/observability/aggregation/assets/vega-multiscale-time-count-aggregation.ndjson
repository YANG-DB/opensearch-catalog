{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"vpc-multiscale-pre_aggregated-count-chart","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"vpc-multiscale-pre_aggregated-count-chart\",\"type\":\"vega\",\"aggs\":[],\"params\":{\"spec\":\"{\\n  \\\"$schema\\\": \\\"https://vega.github.io/schema/vega/v5.json\\\",\\n  \\\"background\\\": \\\"white\\\",\\n  \\\"padding\\\": 5,\\n  \\\"data\\\": [\\n    {\\\"name\\\": \\\"brush_store\\\"},\\n    {\\n      \\\"name\\\": \\\"60minutes_agg\\\",\\n      \\\"url\\\": {\\n        \\\"index\\\": \\\"flint_mv_vpc_flow_logs_hour_requests_agg\\\",\\n        \\\"body\\\": {\\n        \\\"size\\\":1000,\\n          \\\"query\\\": {\\n            \\\"bool\\\": {\\n              \\\"must\\\": [\\n                \\\"%dashboard_context-must_clause%\\\"\\n                {\\n                  \\\"range\\\": {\\n                    \\\"start_time\\\": {\\n                      \\\"%timefilter%\\\": true\\n                    }\\n                  }\\n                }\\n              ],\\n              \\\"must_not\\\": [\\n                \\\"%dashboard_context-must_not_clause%\\\"\\n              ],\\n              \\\"filter\\\": [\\n                \\\"%dashboard_context-filter_clause%\\\"\\n              ]\\n            }\\n          }\\n        }\\n      },\\n      \\\"format\\\": {\\n        \\\"property\\\": \\\"hits\\\",\\n        \\\"type\\\": \\\"json\\\"\\n      },\\n      \\\"transform\\\": [\\n        {\\\"type\\\": \\\"flatten\\\", \\\"fields\\\": [\\\"hits\\\"], \\\"as\\\": [\\\"record\\\"]},\\n        {\\n          \\\"type\\\": \\\"project\\\",\\n          \\\"fields\\\": [\\\"record._source.start_time\\\",\\\"record._source.total_connections\\\",\\\"record._source.total_bytes\\\",\\\"record._source[aws.vpc.region]\\\",\\\"record._source[aws.vpc.pkt-src-aws-service]\\\",\\\"record._source[aws.vpc.pkt-dst-aws-service]\\\"],\\n          \\\"as\\\": [\\\"start_time\\\",\\\"total_connections\\\",\\\"total_bytes\\\",\\\"region\\\",\\\"source-svc\\\",\\\"target-svc\\\"]\\n        },\\n        {\\n          \\\"type\\\": \\\"formula\\\",\\n          \\\"expr\\\": \\\"toDate(datum.start_time)\\\",\\n          \\\"as\\\": \\\"time\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"30minutes_agg\\\",\\n      \\\"url\\\": {\\n        \\\"index\\\": \\\"flint_mv_vpc_flow_30_minutes_requests_agg\\\",\\n        \\\"body\\\": {\\n          \\\"size\\\":1000,\\n          \\\"query\\\": {\\n            \\\"bool\\\": {\\n              \\\"must\\\": [\\n                \\\"%dashboard_context-must_clause%\\\"\\n                {\\n                  \\\"range\\\": {\\n                    \\\"start_time\\\": {\\n                      \\\"%timefilter%\\\": true\\n                    }\\n                  }\\n                }\\n              ],\\n              \\\"must_not\\\": [\\n                \\\"%dashboard_context-must_not_clause%\\\"\\n              ],\\n              \\\"filter\\\": [\\n                \\\"%dashboard_context-filter_clause%\\\"\\n              ]\\n            }\\n          }\\n        }\\n      },\\n      \\\"format\\\": {\\n        \\\"property\\\": \\\"hits\\\",\\n        \\\"type\\\": \\\"json\\\"\\n      },\\n      \\\"transform\\\": [\\n        {\\\"type\\\": \\\"flatten\\\", \\\"fields\\\": [\\\"hits\\\"], \\\"as\\\": [\\\"record\\\"]},\\n        {\\n          \\\"type\\\": \\\"project\\\",\\n          \\\"fields\\\": [\\\"record._source.start_time\\\",\\\"record._source.total_connections\\\",\\\"record._source.total_bytes\\\",\\\"record._source[aws.vpc.region]\\\",\\\"record._source[aws.vpc.pkt-src-aws-service]\\\",\\\"record._source[aws.vpc.pkt-dst-aws-service]\\\"],\\n          \\\"as\\\": [\\\"start_time\\\",\\\"total_connections\\\",\\\"total_bytes\\\",\\\"region\\\",\\\"source-svc\\\",\\\"target-svc\\\"]\\n        },\\n        {\\n          \\\"type\\\": \\\"formula\\\",\\n          \\\"expr\\\": \\\"toDate(datum.start_time)\\\",\\n          \\\"as\\\": \\\"time\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"10minutes_agg\\\",\\n      \\\"url\\\": {\\n        \\\"index\\\": \\\"flint_mv_vpc_flow_10_minutes_requests_agg\\\",\\n        \\\"body\\\": {\\n         \\\"size\\\":1000,\\n         \\\"query\\\": {\\n            \\\"bool\\\": {\\n              \\\"must\\\": [\\n                \\\"%dashboard_context-must_clause%\\\"\\n                {\\n                  \\\"range\\\": {\\n                    \\\"start_time\\\": {\\n                      \\\"%timefilter%\\\": true\\n                    }\\n                  }\\n                }\\n              ],\\n              \\\"must_not\\\": [\\n                \\\"%dashboard_context-must_not_clause%\\\"\\n              ],\\n              \\\"filter\\\": [\\n                \\\"%dashboard_context-filter_clause%\\\"\\n              ]\\n            }\\n          }\\n        }\\n      },\\n      \\\"format\\\": {\\n        \\\"property\\\": \\\"hits\\\",\\n        \\\"type\\\": \\\"json\\\"\\n      },\\n      \\\"transform\\\": [\\n        {\\\"type\\\": \\\"flatten\\\", \\\"fields\\\": [\\\"hits\\\"], \\\"as\\\": [\\\"record\\\"]},\\n        {\\n          \\\"type\\\": \\\"project\\\",\\n          \\\"fields\\\": [\\\"record._source.start_time\\\",\\\"record._source.total_connections\\\",\\\"record._source.total_bytes\\\",\\\"record._source[aws.vpc.region]\\\",\\\"record._source[aws.vpc.pkt-src-aws-service]\\\",\\\"record._source[aws.vpc.pkt-dst-aws-service]\\\"],\\n          \\\"as\\\": [\\\"start_time\\\",\\\"total_connections\\\",\\\"total_bytes\\\",\\\"region\\\",\\\"source-svc\\\",\\\"target-svc\\\"]\\n        },\\n        {\\n          \\\"type\\\": \\\"formula\\\",\\n          \\\"expr\\\": \\\"toDate(datum.start_time)\\\",\\n          \\\"as\\\": \\\"time\\\"\\n        }\\n      ]\\n    }\\n    {\\n      \\\"name\\\": \\\"data_10min_0\\\",\\n      \\\"source\\\": \\\"10minutes_agg\\\",\\n      \\\"transform\\\": [\\n        {\\n          \\\"type\\\": \\\"impute\\\",\\n          \\\"field\\\": \\\"total_connections\\\",\\n          \\\"groupby\\\": [],\\n          \\\"key\\\": \\\"start_time\\\",\\n          \\\"method\\\": \\\"value\\\",\\n          \\\"value\\\": 0\\n        },\\n        {\\n          \\\"type\\\": \\\"stack\\\",\\n          \\\"groupby\\\": [\\\"start_time\\\"],\\n          \\\"field\\\": \\\"total_connections\\\",\\n          \\\"sort\\\": {\\\"field\\\": [], \\\"order\\\": []},\\n          \\\"as\\\": [\\\"doc_count_start\\\", \\\"doc_count_end\\\"],\\n          \\\"offset\\\": \\\"zero\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"data_60min_0\\\",\\n      \\\"source\\\": \\\"60minutes_agg\\\",\\n      \\\"transform\\\": [\\n        {\\n          \\\"type\\\": \\\"impute\\\",\\n          \\\"field\\\": \\\"total_connections\\\",\\n          \\\"groupby\\\": [],\\n          \\\"key\\\": \\\"start_time\\\",\\n          \\\"method\\\": \\\"value\\\",\\n          \\\"value\\\": 0\\n        },\\n        {\\n          \\\"type\\\": \\\"stack\\\",\\n          \\\"groupby\\\": [\\\"start_time\\\"],\\n          \\\"field\\\": \\\"total_connections\\\",\\n          \\\"sort\\\": {\\\"field\\\": [], \\\"order\\\": []},\\n          \\\"as\\\": [\\\"doc_count_start\\\", \\\"doc_count_end\\\"],\\n          \\\"offset\\\": \\\"zero\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"data_30min_0\\\",\\n      \\\"source\\\": \\\"30minutes_agg\\\",\\n      \\\"transform\\\": [\\n        {\\n          \\\"type\\\": \\\"impute\\\",\\n          \\\"field\\\": \\\"total_connections\\\",\\n          \\\"groupby\\\": [],\\n          \\\"key\\\": \\\"start_time\\\",\\n          \\\"method\\\": \\\"value\\\",\\n          \\\"value\\\": 0\\n        },\\n        {\\n          \\\"type\\\": \\\"stack\\\",\\n          \\\"groupby\\\": [\\\"start_time\\\"],\\n          \\\"field\\\": \\\"total_connections\\\",\\n          \\\"sort\\\": {\\\"field\\\": [], \\\"order\\\": []},\\n          \\\"as\\\": [\\\"doc_count_start\\\", \\\"doc_count_end\\\"],\\n          \\\"offset\\\": \\\"zero\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"timeDomain\\\",\\n      \\\"source\\\": [\\\"data_10min_0\\\", \\\"data_30min_0\\\", \\\"data_60min_0\\\"],\\n      \\\"transform\\\": [\\n        {\\n          \\\"type\\\": \\\"fold\\\",\\n          \\\"fields\\\": [\\\"time\\\"]\\n        },\\n        {\\n          \\\"type\\\": \\\"extent\\\",\\n          \\\"field\\\": \\\"value\\\",\\n          \\\"signal\\\": \\\"globalTimeExtent\\\"\\n        }\\n      ]\\n    }],\\n  \\\"signals\\\": [\\n    {\\n      \\\"name\\\": \\\"show60MinMarks\\\",\\n      \\\"value\\\": true,\\n      \\\"bind\\\": {\\\"input\\\": \\\"checkbox\\\", \\\"name\\\": \\\" 60 minutes \\\"}\\n    },\\n    {\\n      \\\"name\\\": \\\"show30MinMarks\\\",\\n      \\\"value\\\": true,\\n      \\\"bind\\\": {\\\"input\\\": \\\"checkbox\\\", \\\"name\\\": \\\" 30 minutes \\\"}\\n    },\\n    {\\n      \\\"name\\\": \\\"show10MinMarks\\\",\\n      \\\"value\\\": true,\\n      \\\"bind\\\": {\\\"input\\\": \\\"checkbox\\\", \\\"name\\\": \\\" 10 minutes\\\"}\\n    },\\n    {\\\"name\\\": \\\"concat_0_height\\\", \\\"value\\\": 350},\\n    {\\\"name\\\": \\\"concat_1_height\\\", \\\"value\\\": 80},\\n    {\\n      \\\"name\\\": \\\"unit\\\",\\n      \\\"value\\\": {},\\n      \\\"on\\\": [\\n        {\\\"events\\\": \\\"pointermove\\\", \\\"update\\\": \\\"isTuple(group()) ? group() : unit\\\"}\\n      ]\\n    },\\n    {\\n      \\\"name\\\": \\\"brush\\\",\\n      \\\"update\\\": \\\"vlSelectionResolve(\\\\\\\"brush_store\\\\\\\", \\\\\\\"union\\\\\\\")\\\"\\n    }\\n  ],\\n  \\\"layout\\\": {\\\"padding\\\": 20, \\\"columns\\\": 1, \\\"bounds\\\": \\\"full\\\", \\\"align\\\": \\\"each\\\"},\\n  \\\"marks\\\": [\\n    {\\n      \\\"type\\\": \\\"group\\\",\\n      \\\"name\\\": \\\"concat_0_group\\\",\\n      \\\"style\\\": \\\"cell\\\",\\n      \\\"encode\\\": {\\n        \\\"update\\\": {\\n          \\\"width\\\": {\\\"signal\\\": \\\"width\\\"},\\n          \\\"height\\\": {\\\"signal\\\": \\\"concat_0_height\\\"}\\n        }\\n      },\\n      \\\"marks\\\": [\\n        {\\n          \\\"name\\\": \\\"concat_0_60_minutes_agg_marks\\\",\\n          \\\"type\\\": \\\"area\\\",\\n          \\\"clip\\\": true,\\n          \\\"style\\\": [\\\"area\\\"],\\n          \\\"sort\\\": {\\\"field\\\": \\\"datum[\\\\\\\"time\\\\\\\"]\\\"},\\n          \\\"interactive\\\": true,\\n          \\\"from\\\": {\\\"data\\\": \\\"data_60min_0\\\"},\\n          \\\"encode\\\": {\\n            \\\"update\\\": {\\n              \\\"orient\\\": {\\\"value\\\": \\\"vertical\\\"},\\n              \\\"opacity\\\": {\\\"signal\\\": \\\"show60MinMarks ? 0.25 : 0\\\"},\\n              \\\"tooltip\\\": {\\n                \\\"signal\\\": \\\"{'signal': '60-minutes_agg','Date': timeFormat(datum['time'], '%b %d, %Y'), 'total_connections': datum['total_connections']}\\\"\\n              }\\n              \\\"fill\\\": {\\\"value\\\": \\\"#4c78a8\\\"},\\n              \\\"description\\\": {\\n                \\\"signal\\\": \\\"\\\\\\\"time: \\\\\\\" + (timeFormat(datum[\\\\\\\"time\\\\\\\"], '%b %d, %Y')) + \\\\\\\"; total_connections: \\\\\\\" + (format(datum[\\\\\\\"total_connections\\\\\\\"], \\\\\\\"\\\\\\\"))\\\"\\n              },\\n              \\\"x\\\": {\\\"scale\\\": \\\"concat_0_x\\\", \\\"field\\\": \\\"time\\\"},\\n              \\\"y\\\": {\\\"scale\\\": \\\"concat_0_y\\\", \\\"field\\\": \\\"doc_count_end\\\"},\\n              \\\"y2\\\": {\\\"scale\\\": \\\"concat_0_y\\\", \\\"field\\\": \\\"doc_count_start\\\"},\\n              \\\"defined\\\": {\\n                \\\"signal\\\": \\\"isValid(datum[\\\\\\\"time\\\\\\\"]) && isFinite(+datum[\\\\\\\"time\\\\\\\"]) && isValid(datum[\\\\\\\"total_connections\\\\\\\"]) && isFinite(+datum[\\\\\\\"total_connections\\\\\\\"])\\\"\\n              }\\n            }\\n          }\\n        },\\n        {\\n          \\\"name\\\": \\\"concat_0_30_minutes_agg_marks\\\",\\n          \\\"type\\\": \\\"area\\\",\\n          \\\"clip\\\": true,\\n          \\\"style\\\": [\\\"area\\\"],\\n          \\\"sort\\\": {\\\"field\\\": \\\"datum[\\\\\\\"time\\\\\\\"]\\\"},\\n          \\\"interactive\\\": true,\\n          \\\"from\\\": {\\\"data\\\": \\\"data_30min_0\\\"},\\n          \\\"encode\\\": {\\n            \\\"update\\\": {\\n              \\\"orient\\\": {\\\"value\\\": \\\"vertical\\\"},\\n              \\\"opacity\\\": {\\\"signal\\\": \\\"show30MinMarks ? 0.5 : 0\\\"},\\n              \\\"tooltip\\\": {\\n                \\\"signal\\\": \\\"{'signal': '30-minutes_agg', 'Date': timeFormat(datum['time'], '%b %d, %Y'), 'total_connections': datum['total_connections']}\\\"\\n              }\\n              \\\"fill\\\": {\\\"value\\\": \\\"green\\\"},\\n              \\\"description\\\": {\\n                \\\"signal\\\": \\\"\\\\\\\"time: \\\\\\\" + (timeFormat(datum[\\\\\\\"time\\\\\\\"], '%b %d, %Y')) + \\\\\\\"; total_connections: \\\\\\\" + (format(datum[\\\\\\\"total_connections\\\\\\\"], \\\\\\\"\\\\\\\"))\\\"\\n              },\\n              \\\"x\\\": {\\\"scale\\\": \\\"concat_0_x\\\", \\\"field\\\": \\\"time\\\"},\\n              \\\"y\\\": {\\\"scale\\\": \\\"concat_0_y\\\", \\\"field\\\": \\\"doc_count_end\\\"},\\n              \\\"y2\\\": {\\\"scale\\\": \\\"concat_0_y\\\", \\\"field\\\": \\\"doc_count_start\\\"},\\n              \\\"defined\\\": {\\n                \\\"signal\\\": \\\"isValid(datum[\\\\\\\"time\\\\\\\"]) && isFinite(+datum[\\\\\\\"time\\\\\\\"]) && isValid(datum[\\\\\\\"total_connections\\\\\\\"]) && isFinite(+datum[\\\\\\\"total_connections\\\\\\\"])\\\"\\n              }\\n            }\\n          }\\n        },\\n        {\\n          \\\"name\\\": \\\"concat_0_10_minutes_agg_marks\\\",\\n          \\\"type\\\": \\\"area\\\",\\n          \\\"clip\\\": true,\\n          \\\"style\\\": [\\\"area\\\"],\\n          \\\"sort\\\": {\\\"field\\\": \\\"datum[\\\\\\\"time\\\\\\\"]\\\"},\\n          \\\"interactive\\\": true,\\n          \\\"from\\\": {\\\"data\\\": \\\"data_10min_0\\\"},\\n          \\\"encode\\\": {\\n            \\\"update\\\": {\\n              \\\"orient\\\": {\\\"value\\\": \\\"vertical\\\"},\\n              \\\"opacity\\\": {\\\"signal\\\": \\\"show10MinMarks ? 0.8 : 0\\\"},\\n              \\\"tooltip\\\": {\\n                \\\"signal\\\": \\\"{'signal': '10-minutes-agg','Date': timeFormat(datum['time'], '%b %d, %Y'), 'total_connections': datum['total_connections']}\\\"\\n              }\\n              \\\"fill\\\": {\\\"value\\\": \\\"purple\\\"},\\n              \\\"description\\\": {\\n                \\\"signal\\\": \\\"\\\\\\\"time: \\\\\\\" + (timeFormat(datum[\\\\\\\"time\\\\\\\"], '%b %d, %Y')) + \\\\\\\"; total_connections: \\\\\\\" + (format(datum[\\\\\\\"total_connections\\\\\\\"], \\\\\\\"\\\\\\\"))\\\"\\n              },\\n              \\\"x\\\": {\\\"scale\\\": \\\"concat_0_x\\\", \\\"field\\\": \\\"time\\\"},\\n              \\\"y\\\": {\\\"scale\\\": \\\"concat_0_y\\\", \\\"field\\\": \\\"doc_count_end\\\"},\\n              \\\"y2\\\": {\\\"scale\\\": \\\"concat_0_y\\\", \\\"field\\\": \\\"doc_count_start\\\"},\\n              \\\"defined\\\": {\\n                \\\"signal\\\": \\\"isValid(datum[\\\\\\\"time\\\\\\\"]) && isFinite(+datum[\\\\\\\"time\\\\\\\"]) && isValid(datum[\\\\\\\"total_connections\\\\\\\"]) && isFinite(+datum[\\\\\\\"total_connections\\\\\\\"])\\\"\\n              }\\n            }\\n          }\\n        }      ],\\n      \\\"axes\\\": [\\n        {\\n          \\\"scale\\\": \\\"concat_0_x\\\",\\n          \\\"orient\\\": \\\"bottom\\\",\\n          \\\"gridScale\\\": \\\"concat_0_y\\\",\\n          \\\"grid\\\": true,\\n          \\\"tickCount\\\": {\\\"signal\\\": \\\"ceil(width/40)\\\"},\\n          \\\"domain\\\": false,\\n          \\\"labels\\\": false,\\n          \\\"aria\\\": false,\\n          \\\"maxExtent\\\": 0,\\n          \\\"minExtent\\\": 0,\\n          \\\"ticks\\\": false,\\n          \\\"zindex\\\": 0\\n        },\\n        {\\n          \\\"scale\\\": \\\"concat_0_y\\\",\\n          \\\"orient\\\": \\\"left\\\",\\n          \\\"gridScale\\\": \\\"concat_0_x\\\",\\n          \\\"grid\\\": true,\\n          \\\"tickCount\\\": {\\\"signal\\\": \\\"ceil(concat_0_height/40)\\\"},\\n          \\\"domain\\\": false,\\n          \\\"labels\\\": false,\\n          \\\"aria\\\": false,\\n          \\\"maxExtent\\\": 0,\\n          \\\"minExtent\\\": 0,\\n          \\\"ticks\\\": false,\\n          \\\"zindex\\\": 0\\n        },\\n        {\\n          \\\"scale\\\": \\\"concat_0_x\\\",\\n          \\\"orient\\\": \\\"bottom\\\",\\n          \\\"grid\\\": false,\\n          \\\"labelFlush\\\": true,\\n          \\\"labelOverlap\\\": true,\\n          \\\"tickCount\\\": {\\\"signal\\\": \\\"ceil(width/40)\\\"},\\n          \\\"zindex\\\": 0\\n        },\\n        {\\n          \\\"scale\\\": \\\"concat_0_y\\\",\\n          \\\"orient\\\": \\\"left\\\",\\n          \\\"grid\\\": false,\\n          \\\"labelOverlap\\\": true,\\n          \\\"tickCount\\\": {\\\"signal\\\": \\\"ceil(concat_0_height/40)\\\"},\\n          \\\"zindex\\\": 0\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"group\\\",\\n      \\\"name\\\": \\\"concat_1_group\\\",\\n      \\\"style\\\": \\\"cell\\\",\\n      \\\"encode\\\": {\\n        \\\"update\\\": {\\n          \\\"width\\\": {\\\"signal\\\": \\\"width\\\"},\\n          \\\"height\\\": {\\\"signal\\\": \\\"concat_1_height\\\"}\\n        }\\n      },\\n      \\\"signals\\\": [\\n        {\\n          \\\"name\\\": \\\"brush_x\\\",\\n          \\\"value\\\": [],\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": {\\n                \\\"source\\\": \\\"scope\\\",\\n                \\\"type\\\": \\\"pointerdown\\\",\\n                \\\"filter\\\": [\\n                  \\\"!event.item || event.item.mark.name !== \\\\\\\"brush_brush\\\\\\\"\\\"\\n                ]\\n              },\\n              \\\"update\\\": \\\"[x(unit), x(unit)]\\\"\\n            },\\n            {\\n              \\\"events\\\": {\\n                \\\"source\\\": \\\"window\\\",\\n                \\\"type\\\": \\\"pointermove\\\",\\n                \\\"consume\\\": true,\\n                \\\"between\\\": [\\n                  {\\n                    \\\"source\\\": \\\"scope\\\",\\n                    \\\"type\\\": \\\"pointerdown\\\",\\n                    \\\"filter\\\": [\\n                      \\\"!event.item || event.item.mark.name !== \\\\\\\"brush_brush\\\\\\\"\\\"\\n                    ]\\n                  },\\n                  {\\\"source\\\": \\\"window\\\", \\\"type\\\": \\\"pointerup\\\"}\\n                ]\\n              },\\n              \\\"update\\\": \\\"[brush_x[0], clamp(x(unit), 0, width)]\\\"\\n            },\\n            {\\n              \\\"events\\\": {\\\"signal\\\": \\\"brush_scale_trigger\\\"},\\n              \\\"update\\\": \\\"[scale(\\\\\\\"concat_1_x\\\\\\\", brush_time[0]), scale(\\\\\\\"concat_1_x\\\\\\\", brush_time[1])]\\\"\\n            },\\n            {\\n              \\\"events\\\": [{\\\"source\\\": \\\"view\\\", \\\"type\\\": \\\"dblclick\\\"}],\\n              \\\"update\\\": \\\"[0, 0]\\\"\\n            },\\n            {\\n              \\\"events\\\": {\\\"signal\\\": \\\"brush_translate_delta\\\"},\\n              \\\"update\\\": \\\"clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, width)\\\"\\n            },\\n            {\\n              \\\"events\\\": {\\\"signal\\\": \\\"brush_zoom_delta\\\"},\\n              \\\"update\\\": \\\"clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, width)\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_time\\\",\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": {\\\"signal\\\": \\\"brush_x\\\"},\\n              \\\"update\\\": \\\"brush_x[0] === brush_x[1] ? null : invert(\\\\\\\"concat_1_x\\\\\\\", brush_x)\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_scale_trigger\\\",\\n          \\\"value\\\": {},\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": [{\\\"scale\\\": \\\"concat_1_x\\\"}],\\n              \\\"update\\\": \\\"(!isArray(brush_time) || (+invert(\\\\\\\"concat_1_x\\\\\\\", brush_x)[0] === +brush_time[0] && +invert(\\\\\\\"concat_1_x\\\\\\\", brush_x)[1] === +brush_time[1])) ? brush_scale_trigger : {}\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_tuple\\\",\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": [{\\\"signal\\\": \\\"brush_time\\\"}],\\n              \\\"update\\\": \\\"brush_time ? {unit: \\\\\\\"concat_1\\\\\\\", fields: brush_tuple_fields, values: [brush_time]} : null\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_tuple_fields\\\",\\n          \\\"value\\\": [{\\\"field\\\": \\\"time\\\", \\\"channel\\\": \\\"x\\\", \\\"type\\\": \\\"R\\\"}]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_translate_anchor\\\",\\n          \\\"value\\\": {},\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": [\\n                {\\n                  \\\"source\\\": \\\"scope\\\",\\n                  \\\"type\\\": \\\"pointerdown\\\",\\n                  \\\"markname\\\": \\\"brush_brush\\\"\\n                }\\n              ],\\n              \\\"update\\\": \\\"{x: x(unit), y: y(unit), extent_x: slice(brush_x)}\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_translate_delta\\\",\\n          \\\"value\\\": {},\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": [\\n                {\\n                  \\\"source\\\": \\\"window\\\",\\n                  \\\"type\\\": \\\"pointermove\\\",\\n                  \\\"consume\\\": true,\\n                  \\\"between\\\": [\\n                    {\\n                      \\\"source\\\": \\\"scope\\\",\\n                      \\\"type\\\": \\\"pointerdown\\\",\\n                      \\\"markname\\\": \\\"brush_brush\\\"\\n                    },\\n                    {\\\"source\\\": \\\"window\\\", \\\"type\\\": \\\"pointerup\\\"}\\n                  ]\\n                }\\n              ],\\n              \\\"update\\\": \\\"{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_zoom_anchor\\\",\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": [\\n                {\\n                  \\\"source\\\": \\\"scope\\\",\\n                  \\\"type\\\": \\\"wheel\\\",\\n                  \\\"consume\\\": true,\\n                  \\\"markname\\\": \\\"brush_brush\\\"\\n                }\\n              ],\\n              \\\"update\\\": \\\"{x: x(unit), y: y(unit)}\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_zoom_delta\\\",\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": [\\n                {\\n                  \\\"source\\\": \\\"scope\\\",\\n                  \\\"type\\\": \\\"wheel\\\",\\n                  \\\"consume\\\": true,\\n                  \\\"markname\\\": \\\"brush_brush\\\"\\n                }\\n              ],\\n              \\\"force\\\": true,\\n              \\\"update\\\": \\\"pow(1.001, event.deltaY * pow(16, event.deltaMode))\\\"\\n            }\\n          ]\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_modify\\\",\\n          \\\"on\\\": [\\n            {\\n              \\\"events\\\": {\\\"signal\\\": \\\"brush_tuple\\\"},\\n              \\\"update\\\": \\\"modify(\\\\\\\"brush_store\\\\\\\", brush_tuple, true)\\\"\\n            }\\n          ]\\n        }\\n      ],\\n      \\\"marks\\\": [\\n        {\\n          \\\"name\\\": \\\"brush_brush_bg\\\",\\n          \\\"type\\\": \\\"rect\\\",\\n          \\\"clip\\\": true,\\n          \\\"encode\\\": {\\n            \\\"enter\\\": {\\n              \\\"fill\\\": {\\\"value\\\": \\\"#333\\\"},\\n              \\\"fillOpacity\\\": {\\\"value\\\": 0.125}\\n            },\\n            \\\"update\\\": {\\n              \\\"x\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"signal\\\": \\\"brush_x[0]\\\"\\n                },\\n                {\\\"value\\\": 0}\\n              ],\\n              \\\"y\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"value\\\": 0\\n                },\\n                {\\\"value\\\": 0}\\n              ],\\n              \\\"x2\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"signal\\\": \\\"brush_x[1]\\\"\\n                },\\n                {\\\"value\\\": 0}\\n              ],\\n              \\\"y2\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"field\\\": {\\\"group\\\": \\\"height\\\"}\\n                },\\n                {\\\"value\\\": 0}\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          \\\"name\\\": \\\"concat_1_marks\\\",\\n          \\\"type\\\": \\\"area\\\",\\n          \\\"style\\\": [\\\"area\\\"],\\n          \\\"sort\\\": {\\\"field\\\": \\\"datum[\\\\\\\"time\\\\\\\"]\\\"},\\n          \\\"interactive\\\": true,\\n          \\\"from\\\": {\\\"data\\\": \\\"timeDomain\\\"},\\n          \\\"encode\\\": {\\n            \\\"update\\\": {\\n              \\\"orient\\\": {\\\"value\\\": \\\"vertical\\\"},\\n              \\\"fill\\\": {\\\"value\\\": \\\"#4c78a8\\\"},\\n              \\\"description\\\": {\\n                \\\"signal\\\": \\\"\\\\\\\"time: \\\\\\\" + (timeFormat(datum[\\\\\\\"time\\\\\\\"], '%Y')) + \\\\\\\"; total_connections: \\\\\\\" + (format(datum[\\\\\\\"total_connections\\\\\\\"], \\\\\\\"\\\\\\\"))\\\"\\n              },\\n              \\\"x\\\": {\\\"scale\\\": \\\"concat_1_x\\\", \\\"field\\\": \\\"time\\\"},\\n              \\\"y\\\": {\\\"scale\\\": \\\"concat_1_y\\\", \\\"field\\\": \\\"doc_count_end\\\"},\\n              \\\"y2\\\": {\\\"scale\\\": \\\"concat_1_y\\\", \\\"field\\\": \\\"doc_count_start\\\"},\\n              \\\"defined\\\": {\\n                \\\"signal\\\": \\\"isValid(datum[\\\\\\\"time\\\\\\\"]) && isFinite(+datum[\\\\\\\"time\\\\\\\"]) && isValid(datum[\\\\\\\"total_connections\\\\\\\"]) && isFinite(+datum[\\\\\\\"total_connections\\\\\\\"])\\\"\\n              }\\n            }\\n          }\\n        },\\n        {\\n          \\\"name\\\": \\\"brush_brush\\\",\\n          \\\"type\\\": \\\"rect\\\",\\n          \\\"clip\\\": true,\\n          \\\"encode\\\": {\\n            \\\"enter\\\": {\\\"fill\\\": {\\\"value\\\": \\\"transparent\\\"}},\\n            \\\"update\\\": {\\n              \\\"x\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"signal\\\": \\\"brush_x[0]\\\"\\n                },\\n                {\\\"value\\\": 0}\\n              ],\\n              \\\"y\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"value\\\": 0\\n                },\\n                {\\\"value\\\": 0}\\n              ],\\n              \\\"x2\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"signal\\\": \\\"brush_x[1]\\\"\\n                },\\n                {\\\"value\\\": 0}\\n              ],\\n              \\\"y2\\\": [\\n                {\\n                  \\\"test\\\": \\\"data(\\\\\\\"brush_store\\\\\\\").length && data(\\\\\\\"brush_store\\\\\\\")[0].unit === \\\\\\\"concat_1\\\\\\\"\\\",\\n                  \\\"field\\\": {\\\"group\\\": \\\"height\\\"}\\n                },\\n                {\\\"value\\\": 0}\\n              ],\\n              \\\"stroke\\\": [\\n                {\\\"test\\\": \\\"brush_x[0] !== brush_x[1]\\\", \\\"value\\\": \\\"white\\\"},\\n                {\\\"value\\\": null}\\n              ]\\n            }\\n          }\\n        }\\n      ],\\n      \\\"axes\\\": [\\n        {\\n          \\\"scale\\\": \\\"concat_1_x\\\",\\n          \\\"orient\\\": \\\"bottom\\\",\\n          \\\"gridScale\\\": \\\"concat_1_y\\\",\\n          \\\"grid\\\": true,\\n          \\\"tickCount\\\": {\\\"signal\\\": \\\"ceil(width/40)\\\"},\\n          \\\"domain\\\": false,\\n          \\\"labels\\\": false,\\n          \\\"aria\\\": false,\\n          \\\"maxExtent\\\": 0,\\n          \\\"minExtent\\\": 0,\\n          \\\"ticks\\\": false,\\n          \\\"zindex\\\": 0\\n        },\\n        {\\n          \\\"scale\\\": \\\"concat_1_x\\\",\\n          \\\"orient\\\": \\\"bottom\\\",\\n          \\\"grid\\\": false,\\n          \\\"format\\\": \\\"%Y\\\",\\n          \\\"labelFlush\\\": true,\\n          \\\"labelOverlap\\\": true,\\n          \\\"tickCount\\\": {\\\"signal\\\": \\\"ceil(width/40)\\\"},\\n          \\\"zindex\\\": 0\\n        },\\n        {\\n          \\\"scale\\\": \\\"concat_1_y\\\",\\n          \\\"orient\\\": \\\"left\\\",\\n          \\\"grid\\\": false,\\n          \\\"tickCount\\\": 3,\\n          \\\"labelOverlap\\\": true,\\n          \\\"zindex\\\": 0\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"scales\\\": [\\n    {\\n      \\\"name\\\": \\\"colorScale60Min\\\",\\n      \\\"type\\\": \\\"ordinal\\\",\\n      \\\"domain\\\": [\\\"60-Min-Marks\\\"],\\n      \\\"range\\\": [\\\"#4c78a8\\\"]\\n    },\\n    {\\n      \\\"name\\\": \\\"colorScale30Min\\\",\\n      \\\"type\\\": \\\"ordinal\\\",\\n      \\\"domain\\\": [\\\"30-Min-Marks\\\"],\\n      \\\"range\\\": [\\\"green\\\"]\\n    },\\n    {\\n      \\\"name\\\": \\\"colorScale10Min\\\",\\n      \\\"type\\\": \\\"ordinal\\\",\\n      \\\"domain\\\": [\\\"10-Min-Marks\\\"],\\n      \\\"range\\\": [\\\"purple\\\"]\\n    },\\n\\n    {\\n      \\\"name\\\": \\\"concat_0_x\\\",\\n      \\\"type\\\": \\\"time\\\",\\n      \\\"domain\\\": {\\\"data\\\": \\\"timeDomain\\\", \\\"field\\\": \\\"time\\\"},\\n      \\\"domainRaw\\\": {\\\"signal\\\": \\\"brush[\\\\\\\"time\\\\\\\"]\\\"},\\n      \\\"range\\\": [0, {\\\"signal\\\": \\\"width\\\"}]\\n    },\\n    {\\n      \\\"name\\\": \\\"concat_0_y\\\",\\n      \\\"type\\\": \\\"linear\\\",\\n      \\\"domain\\\": {\\n        \\\"data\\\": \\\"timeDomain\\\",\\n        \\\"fields\\\": [\\\"doc_count_start\\\", \\\"doc_count_end\\\"]\\n      },\\n      \\\"range\\\": [{\\\"signal\\\": \\\"concat_0_height\\\"}, 0],\\n      \\\"nice\\\": true,\\n      \\\"zero\\\": true\\n    },\\n    {\\n      \\\"name\\\": \\\"concat_1_x\\\",\\n      \\\"type\\\": \\\"time\\\",\\n      \\\"domain\\\": {\\\"data\\\": \\\"timeDomain\\\", \\\"field\\\": \\\"time\\\"},\\n      \\\"range\\\": [0, {\\\"signal\\\": \\\"width\\\"}]\\n    },\\n    {\\n      \\\"name\\\": \\\"concat_1_y\\\",\\n      \\\"type\\\": \\\"linear\\\",\\n      \\\"domain\\\": {\\n        \\\"data\\\": \\\"timeDomain\\\",\\n        \\\"fields\\\": [\\\"doc_count_start\\\", \\\"doc_count_end\\\"]\\n      },\\n      \\\"range\\\": [{\\\"signal\\\": \\\"concat_1_height\\\"}, 0],\\n      \\\"nice\\\": true,\\n      \\\"zero\\\": true\\n    }\\n  ],\\n  \\\"legends\\\": [\\n    {\\n      \\\"fill\\\": \\\"colorScale60Min\\\",\\n      \\\"orient\\\": \\\"top-left\\\",\\n      \\\"encode\\\": {\\n        \\\"symbols\\\": {\\n          \\\"update\\\": {\\n            \\\"opacity\\\": {\\\"value\\\": 1}\\n          }\\n        }\\n      }\\n    },\\n    {\\n      \\\"fill\\\": \\\"colorScale30Min\\\",\\n      \\\"orient\\\": \\\"top-left\\\",\\n      \\\"encode\\\": {\\n        \\\"symbols\\\": {\\n          \\\"update\\\": {\\n            \\\"opacity\\\": {\\\"value\\\": 1}\\n          }\\n        }\\n      }\\n    },\\n    {\\n      \\\"fill\\\": \\\"colorScale10Min\\\",\\n      \\\"orient\\\": \\\"top-left\\\",\\n      \\\"encode\\\": {\\n        \\\"symbols\\\": {\\n          \\\"update\\\": {\\n            \\\"opacity\\\": {\\\"value\\\": 1}\\n          }\\n        }\\n      }\\n    }\\n  ],\\n  \\\"config\\\": {}\\n}\"}}"},"id":"1bccfadf-776c-4b56-a69f-559b88cfbeaf","migrationVersion":{"visualization":"7.10.0"},"references":[],"type":"visualization","updated_at":"2024-04-03T00:05:13.279Z","version":"WzEzNCwzXQ=="}
{"exportedCount":1,"missingRefCount":0,"missingReferences":[]}